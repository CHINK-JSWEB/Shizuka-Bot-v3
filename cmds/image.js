const axios = require("axios");
const fs = require("fs");
const path = require("path");

module.exports = {
  name: "image",
  version: "3.0",
  hasPrefix: false,
  description: "Generate AI images using Pollinations or Lexica as fallback",
  usage: "image <prompt>",
  credits: "Jonnel Soriano",

  async execute({ api, event, args }) {
    const { threadID, messageID } = event;

    if (!args.length) {
      return api.sendMessage("üñºÔ∏è Usage: image <prompt>\nExample: image red cat", threadID, messageID);
    }

    const prompt = args.join(" ");
    const tempPath = path.join(__dirname, "generated_image.jpg");

    // Format Date & Time
    const now = new Date();
    const time = now.toLocaleTimeString("en-PH", { hour12: true });
    const date = now.toLocaleDateString("en-PH");

    // Default to Pollinations AI
    let imageUrl = `https://image.pollinations.ai/prompt/${encodeURIComponent(prompt)}`;
    let source = "Pollinations AI";

    api.setMessageReaction("üé®", messageID, () => {}, true);
    api.sendMessage(`üé® Generating image for: "${prompt}"... please wait.`, threadID, messageID);

    try {
      // Try Pollinations
      const img = await axios.get(imageUrl, { responseType: "arraybuffer" });
      fs.writeFileSync(tempPath, img.data);

      const msg = `üü¢‚ö™üî¥ ùóîùóú ùóúùó†ùóîùóöùóò ùóöùóòùó°ùóòùó•ùóîùóßùó¢ùó• üü¢‚ö™üî¥

üñºÔ∏è *Prompt:* ${prompt}
üîó *Source:* ${source}
üë®‚Äçüíª *Creator:* Jonnel Soriano
üïí *Time:* ${time}
üìÖ *Date:* ${date}

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
‚úÖ Successfully generated by ${source}!`;

      return api.sendMessage(
        { body: msg, attachment: fs.createReadStream(tempPath) },
        threadID,
        () => {
          fs.unlinkSync(tempPath);
          api.setMessageReaction("‚úÖ", messageID, () => {}, true);
        }
      );

    } catch (error) {
      console.warn("‚ö†Ô∏è Pollinations failed, switching to Lexica:", error.message);
    }

    // Fallback to Lexica.art
    try {
      const lexica = await axios.get(`https://lexica.art/api/v1/search?q=${encodeURIComponent(prompt)}`);
      if (lexica.data && lexica.data.images && lexica.data.images.length > 0) {
        imageUrl = lexica.data.images[0].src;
        source = "Lexica.art";

        const img = await axios.get(imageUrl, { responseType: "arraybuffer" });
        fs.writeFileSync(tempPath, img.data);

        const msg = `üü¢‚ö™üî¥ ùóîùóú ùóúùó†ùóîùóöùóò ùóöùóòùó°ùóòùó•ùóîùóßùó¢ùó• üü¢‚ö™üî¥

üñºÔ∏è *Prompt:* ${prompt}
üîó *Source:* ${source}
üë®‚Äçüíª *Creator:* Jonnel Soriano
üïí *Time:* ${time}
üìÖ *Date:* ${date}

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
‚úÖ Image fetched from ${source}!`;

        return api.sendMessage(
          { body: msg, attachment: fs.createReadStream(tempPath) },
          threadID,
          () => {
            fs.unlinkSync(tempPath);
            api.setMessageReaction("‚úÖ", messageID, () => {}, true);
          }
        );
      } else {
        throw new Error("No image found in Lexica");
      }
    } catch (err) {
      console.error("‚ùå All sources failed:", err.message);
      api.sendMessage(
        `‚ùå Sorry, no image was generated.\nTry another prompt.\n\nüü¢‚ö™üî¥ *Creator:* Jonnel Soriano`,
        threadID,
        messageID
      );
      api.setMessageReaction("‚ùå", messageID, () => {}, true);
    }
  }
};